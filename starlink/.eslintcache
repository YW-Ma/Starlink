[{"F:\\OneDrive\\Developer\\Starlink\\Starlink\\starlink\\src\\index.js":"1","F:\\OneDrive\\Developer\\Starlink\\Starlink\\starlink\\src\\reportWebVitals.js":"2","F:\\OneDrive\\Developer\\Starlink\\Starlink\\starlink\\src\\components\\App.js":"3","F:\\OneDrive\\Developer\\Starlink\\Starlink\\starlink\\src\\components\\Header.js":"4","F:\\OneDrive\\Developer\\Starlink\\Starlink\\starlink\\src\\components\\Footer.js":"5","F:\\OneDrive\\Developer\\Starlink\\Starlink\\starlink\\src\\components\\Main.js":"6","F:\\OneDrive\\Developer\\Starlink\\Starlink\\starlink\\src\\components\\SatSetting.js":"7","F:\\OneDrive\\Developer\\Starlink\\Starlink\\starlink\\src\\components\\SatList.js":"8","F:\\OneDrive\\Developer\\Starlink\\Starlink\\starlink\\src\\constants.js":"9","F:\\OneDrive\\Developer\\Starlink\\Starlink\\starlink\\src\\components\\WorldMap.js":"10"},{"size":545,"mtime":1607572649952,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":268,"mtime":1608009698272,"results":"14","hashOfConfig":"12"},{"size":436,"mtime":1607583315082,"results":"15","hashOfConfig":"12"},{"size":280,"mtime":1607573266101,"results":"16","hashOfConfig":"12"},{"size":2947,"mtime":1608174940245,"results":"17","hashOfConfig":"12"},{"size":4102,"mtime":1607906558074,"results":"18","hashOfConfig":"12"},{"size":3910,"mtime":1608174871167,"results":"19","hashOfConfig":"12"},{"size":308,"mtime":1608006466763,"results":"20","hashOfConfig":"12"},{"size":2860,"mtime":1608173317633,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"11fiz97",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\OneDrive\\Developer\\Starlink\\Starlink\\starlink\\src\\index.js",[],["44","45"],"F:\\OneDrive\\Developer\\Starlink\\Starlink\\starlink\\src\\reportWebVitals.js",[],"F:\\OneDrive\\Developer\\Starlink\\Starlink\\starlink\\src\\components\\App.js",[],"F:\\OneDrive\\Developer\\Starlink\\Starlink\\starlink\\src\\components\\Header.js",[],"F:\\OneDrive\\Developer\\Starlink\\Starlink\\starlink\\src\\components\\Footer.js",[],"F:\\OneDrive\\Developer\\Starlink\\Starlink\\starlink\\src\\components\\Main.js",[],"F:\\OneDrive\\Developer\\Starlink\\Starlink\\starlink\\src\\components\\SatSetting.js",[],"F:\\OneDrive\\Developer\\Starlink\\Starlink\\starlink\\src\\components\\SatList.js",["46"],"import React, {Component} from 'react';\r\nimport { List, Avatar, Button, Checkbox, Spin } from \"antd\";\r\nimport satelliteLogo from \"../assets/images/satellite.svg\"\r\nimport {select} from \"d3-selection\"\r\n\r\n// 显示返回的数据 - List\r\n// 显示loading - main的state和修改\r\n// 通知map我选了什么 - 一个selected state。\r\n\r\n\r\nclass SatList extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      selected: [] //satList\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const isLoading = this.props.isLoading;\r\n    // const satList = this.props.sateInfo.above; 不安全，sateInfo可能是undefined\r\n    const satList = this.props.sateInfo ? this.props.sateInfo.above : [];\r\n    return (\r\n      <div className=\"sat-list-box\">\r\n        <div className=\"sat-list-buttons\">\r\n          <Button\r\n            type=\"primary\"\r\n            className=\"sat-list-btn\"\r\n            size=\"large\"\r\n            onClick={this.onTrackOnMap}\r\n          >\r\n            Track on the map\r\n          </Button>\r\n          <Button\r\n            type=\"primary\"\r\n            className=\"sat-list-clear-btn\"\r\n            size=\"large\"\r\n            onClick={this.onClear}\r\n          >\r\n            Clear\r\n          </Button>\r\n        </div>\r\n        <hr />\r\n        {/*handle loading*/}\r\n        {\r\n          isLoading\r\n            ?\r\n            <div>\r\n              <Spin tip=\"Loading\" size=\"large\"></Spin>\r\n            </div>\r\n            :\r\n            <List\r\n              className=\"sat-list\"\r\n              itemLayout=\"horizontal\"\r\n              size=\"small\"\r\n              dataSource={satList}\r\n              renderItem={item => ( // this \"item\" stands for an entry of dataSource. (like an iterator)\r\n                <List.Item\r\n                  actions={[\r\n                    <Checkbox\r\n                      dataInfo={item}\r\n                      onChange={this.onChange}\r\n                      checked={this.state.selected.some( entry => entry.satid === item.satid )}\r\n                    />\r\n                  ]}\r\n                >\r\n                  <List.Item.Meta\r\n                    avatar={<Avatar size={50} src={satelliteLogo} />}\r\n                    title={<p>{item.satname}</p>}\r\n                    description={`Launch Date: ${item.launchDate}`}\r\n                  />\r\n                </List.Item>\r\n              )}\r\n            />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n  onChange = e => {\r\n    // step1: get current selected sat-info\r\n    const {dataInfo, checked} = e.target;\r\n    const {selected} = this.state;\r\n\r\n    // step2: add / remove current selected sat to / from a new selected list\r\n    const list = this.addOrRemove(dataInfo, checked, selected);\r\n    // step3: update selected state --> pass data to Main component to show it in Map\r\n    this.setState({\r\n      selected: list,\r\n    })\r\n  }\r\n\r\n  addOrRemove = (item, checked, list) => {\r\n    // case1: check is true:\r\n    //    1.1 item is not in the list -> add item\r\n    //    1.2 item is in the list -> do nothing\r\n\r\n    // case2: check is false:\r\n    //    2.1 item is not in the list -> do nothing\r\n    //    2.2 item is in the list -> remove item\r\n\r\n    // Tips:\r\n    // The some() method tests whether at least one element in the array\r\n    // passes the test implemented by the provided function.\r\n    // 删filter, 找m，加..\r\n    // It returns a Boolean value.\r\n    const found = list.some( entry => entry.satid === item.satid )\r\n    // 1.1\r\n    if (checked && !found) {\r\n      list = [...list, item];\r\n    }\r\n    // 2.2\r\n    if (!checked && found) {\r\n      list = list.filter(entry => {\r\n        return entry.satid !== item.satid;\r\n      });\r\n    }\r\n    return list;\r\n  }\r\n\r\n  onTrackOnMap = () => {\r\n    this.props.onShowMap(this.state.selected);\r\n  }\r\n\r\n  onClear = () => {\r\n    this.props.onClear();\r\n    this.setState(preState => ({\r\n      ...preState,\r\n      selected: []\r\n    }))\r\n  }\r\n}\r\n\r\nexport default SatList;\r\n","F:\\OneDrive\\Developer\\Starlink\\Starlink\\starlink\\src\\constants.js",[],"F:\\OneDrive\\Developer\\Starlink\\Starlink\\starlink\\src\\components\\WorldMap.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":4,"column":9,"nodeType":"53","messageId":"54","endLine":4,"endColumn":15},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'select' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]